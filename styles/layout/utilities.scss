@use "sass:map";
@use "variables" as *;
@use "mixins" as *;

.max-width {
  @include max-width;

  position: relative;
  z-index: 1;
}

.full-bleed {
  &:not(img) {
    @include full-bleed;
  }

  &:where(img) {
    @include full-bleed("img");
  }
}

.row {
  display: flex;
  flex-flow: row wrap;
}

.column {
  display: flex;
  flex-direction: column;
}

@for $flex from 1 through 12 {
  .flex-#{$flex} {
    flex: $flex;
  }
}

.grid {
  --grid-columns-default: 12;
  --grid-columns: var(--grid-columns-default);

  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);

  @media (--above-small) {
    --above-small-grid-columns: var(--grid-columns-default);
    --grid-columns: var(--above-small-grid-columns);
  }

  @media (--above-medium) {
    --above-medium-grid-columns: var(--above-small-grid-columns);
    --grid-columns: var(--above-medium-grid-columns);
  }

  @media (--above-large) {
    --above-large-grid-columns: var(--above-medium-grid-columns);
    --grid-columns: var(--above-large-grid-columns);
  }

  @media (--above-x-large) {
    --above-x-large-grid-columns: var(--above-large-grid-columns);
    --grid-columns: var(--above-x-large-grid-columns);
  }
}

.column-full {
  grid-column: 1 / -1;
}

@for $column from 1 through 12 {
  .column-#{$column} {
    grid-column: span $column;
  }
}

@each $breakpoint, $width in $breakpoints {
  @media (--above-#{$breakpoint}) {
    .above-#{$breakpoint}\:column-full {
      grid-column: 1 / -1;
    }

    @for $column from 1 through 12 {
      .above-#{$breakpoint}\:column-#{$column} {
        grid-column: span $column;
      }
    }
  }
}

@each $space, $value in $spaces {
  .gap-#{$space} {
    gap: $value;
  }

  .row-gap-#{$space} {
    row-gap: $value;
  }

  .column-gap-#{$space} {
    column-gap: $value;
  }

  .margin-bottom-#{$space} {
    margin-bottom: $value;
  }
}

.justify-space-between {
  justify-content: space-between;
}

.justify-start,
.justify-left {
  justify-content: start;
}

.justify-end,
.justify-right {
  justify-content: end;
}

.justify-center {
  justify-content: center;
  justify-items: center;
}

.align-center {
  align-items: center;
}

.align-start,
.align-top {
  align-items: start;
}

.align-end,
.align-bottom {
  align-items: end;
}

.float-left {
  margin: 0 auto var(--tcds-space-loose);

  @media (--above-medium) {
    float: left;
    margin: 0 var(--tcds-space-loose) var(--tcds-space-loose) 0;
  }
}

.float-right {
  margin: 0 auto var(--tcds-space-loose);

  @media (--above-medium) {
    float: right;
    margin: 0 0 var(--tcds-space-loose) var(--tcds-space-loose);
  }
}

@each $breakpoint, $x in $breakpoints {
  @media (--below-#{$breakpoint}) {
    .hide-below-#{$breakpoint} {
      display: none !important;
    }
  }

  @media (--above-#{$breakpoint}) {
    .hide-above-#{$breakpoint} {
      display: none !important;
    }
  }
}
