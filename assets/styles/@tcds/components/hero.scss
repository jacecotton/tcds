@use "@tcds" as *;

.Hero {
  padding: 0;

  &:not(#{&}--dark-text) {
    color: #fff;
  }

  @include breakpoint-above("medium") {
    box-sizing: content-box;
    padding-top: var(--site-header-height, 0);
    margin-top: calc(var(--site-header-height, 0px) * -1);
  }

  /** Children */

  &__print-safe {
    display: flex;
    align-items: var(--hero-align-items, center);
    aspect-ratio: var(--hero-aspect-ratio, unset);
    min-height: var(--hero-base-height, 0);
  }

  &__content-area {
    @include max-width;

    display: flex;
    align-items: center;
    gap: space("x-loose");
    padding: var(--section-vertical-padding, 0) 0;

    @include breakpoint-above("medium") {
      padding-left: 3rem;
    }
  }

  &__heading {
    @include font-size("xx-large");

    font-family: font-stack("headings");
    font-weight: font-weight("bold");
    margin: 0;
    text-shadow: var(--section-text-shadow, none);

    @include breakpoint-above("medium") {
      width: 50%;
    }
  }

  &__subheading {
    @include font-size("medium-plus");

    text-shadow: var(--section-text-shadow, none);

    @include breakpoint-above("medium") {
      width: 50%;
    }
  }

  &__overline {
    font-family: font-stack("headings");
  }

  .Breadcrumb {
    &__link {
      color: inherit;

      &:not(:hover) {
        text-decoration: none;
      }
    }
  }
}

.Section {
  &:not(#{&}--vertically-responsive):not(#{&}--full-height) {
    --hero-aspect-ratio: 4 / 3; // Standard aspect ratio

    @include breakpoint-above("medium") {
      --hero-aspect-ratio: 16 / 9; // Standard widescreen aspect ratio
    }

    @include breakpoint-above("x-large") {
      --hero-aspect-ratio: 16 / 5; // Standard ultra-widescreen aspect ratio
    }
  }

  &--vertically-responsive {
    --hero-base-height: calc(75vh - var(--site-header-height, 0px));
  }

  /**
   * Make hero fill the full height of the window. Note the minimum height will
   * still be the height of the inner content plus top and bottom padding (even
   * if the window height scales below that).
   */
  &--full-height {
    --hero-base-height: calc(100vh - var(--site-header-height, 0px));
  }

  /**
   * Align content to the bottom of the hero.
   */
  &--align-bottom {
    --hero-align-items: end;
  }

  /**
   * Only allow parallax if reduced motion preference is not set. Note this
   * property is not necessary for the parallax effect, but serves as a decent
   * fallback if the JavaScript effect fails.
   */
  @include motion-ok {
    &--parallax {
      background-attachment: fixed;
    }
  }
}
