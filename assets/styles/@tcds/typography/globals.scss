@use "@tcds" as *;

body {
  @include font-size("medium");

  color: color("gray", "400");
  font-family: font-stack("default");
}

/**
 * 1. Use `:where` pseduo-function to zero out the specificity and make the
 *    styles easier to override. Note that browsers that do not support `:where`
 *    will use the default browser link styles.
 */
:where(a) {
  color: theme-color("link");
  text-decoration: underline;
  transition: color animation("productive");
}

:where(a:hover),
:where(a:visited) {
  color: theme-color("link", "400");
}

/**
 * Default heading styles.
 *
 * 1. Use `:where` pseduo-function to zero out the specificity and make the
 *    styles easier to override. Browser support lacks IE, Edge 87-, Firefox
 *    77-, Chrome 87-, Safari 13.7-, so only include styles in this ruleset that
 *    are not critical.
 * 2. Give a base vertical margin as a starting point (only give a top margin if
 *    the heading is not the first child).
 * 3. Add a much larger top margin to headings that are not directly under a
 *    heading one level higher.
 */

h1,
.h1 {
  @include font-size("xx-large");

  letter-spacing: -0.025em;
  margin: 0 0 2rem;
}

h2,
.h2 {
  @include font-size("x-large");

  letter-spacing: -0.0125em;
}

h3,
.h3 {
  @include font-size("large");

  letter-spacing: 0.0125em;
}

h4,
.h4 {
  @include font-size("medium-plus");

  letter-spacing: 0.0125em;
}

h5,
.h5 {
  @include font-size("medium");

  letter-spacing: 0.0125em;
}

h6,
.h6 {
  @include font-size("small");

  font-weight: font-weight("bold");
  letter-spacing: 0.0125em;
}

:where(h1, h2, h3, h4, h5, h6), // 1
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: font-stack("headings");
  font-weight: font-weight("bold");
}

:where(h2, h3, h4, h5, h6), // 1
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin: 1rem 0; // 2

  &:first-child {
    margin-top: 0; // 2
  }
}

:where(:not(h1) + h2),
:where(:not(h2) + h3) {
  margin-top: 3.5rem; // 3
}

:where(:not(h3) + h4) {
  margin-top: 2rem; // 3
}

/**
 * Styles for elements that make text smaller relative to the element's parent
 * font size.
 *
 * 1. Fallback/base style. Makes these elements' font size 87.5% of the parent
 *    font size.
 * 2. If supported, do not allow the font size to go below the absolute
 *    acceptable minimum font size (`x-small`).
 */

small,
sub,
sup {
  font-size: 87.5%; // 1
  font-size: max(#{font-size("x-small"), 87.5%}); // 2
}

p {
  @include font-size("medium");

  margin: 0 0 space("normal", "rem");

  &:last-child {
    margin-bottom: 0;
  }
}
