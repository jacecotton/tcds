"use strict";(self.webpackChunk_txch_tcds=self.webpackChunk_txch_tcds||[]).push([[369],{578:(t,i,n)=>{var s=n(337),o=n(138),a=n(35);const r=new CSSStyleSheet;r.replaceSync(':host {\n  display: block; \n}\n\n:host(:hover),\n:host(:focus-within) {\n  --tcds-carousel-play-pause-opacity: 1;\n}\n\n:host([multiple]) {\n  --tcds-carousel-slide-gap: 4vw;\n  --tcds-carousel-slide-size: min(700px, 70vw);\n  --tcds-carousel-slide-align: center;\n  --tcds-carousel-padding-inline-end: 50%;\n  --tcds-carousel-viewport-align-items: stretch;\n  --tcds-carousel-slide-display: grid;\n  --tcds-carousel-spacer: "";\n}\n\nsection {\n  display: grid;\n  grid-template-areas:\n    "slides"\n    "navigation"\n    "play-pause";\n  grid-template-columns: 100%;\n  align-items: center;\n  justify-content: center;\n  grid-gap: var(--tcds-space-loose) 0;\n  gap: var(--tcds-space-loose) 0;\n}\n\n@media (min-width: 700px) {\n\nsection {\n    grid-template-areas:\n      "slides     slides"\n      "play-pause navigation";\n    grid-template-columns: min-content 1fr;\n    justify-content: start;\n}\n  }\n\n@media (hover: none), (max-width: 1024px) {\n\nsection {\n    --tcds-carousel-play-pause-opacity: 1;\n}\n  }\n\n:host([navigation*="top"][navigation*="right"]) section {\n    --tcds-carousel-navigation-justify: end;\n\n    grid-template-areas:\n      ".          navigation"\n      "sldies     slides"\n      "play-pause .";\n    gap: 1rem;\n  }\n\n[part="viewport"] {\n  grid-area: slides;\n  display: flex;\n  gap: 0;\n  gap: var(--tcds-carousel-slide-gap, 0);\n  align-items: center;\n  align-items: var(--tcds-carousel-viewport-align-items, center);\n  overflow-x: scroll;\n  scroll-snap-type: x mandatory;\n  scrollbar-width: none;\n  overscroll-behavior-x: none;\n  position: relative;\n  padding:\n    1.5rem\n    0\n    1.5rem\n    0;\n  padding:\n    var(--tcds-carousel-padding-block, 1.5rem)\n    var(--tcds-carousel-padding-inline-start, 0)\n    var(--tcds-carousel-padding-block, 1.5rem)\n    var(--tcds-carousel-padding-inline-end, 0);\n}\n\n@media (prefers-reduced-motion: no-preference) {\n\n[part="viewport"] {\n    scroll-behavior: smooth;\n}\n  }\n\n[part="viewport"]::-webkit-scrollbar {\n    display: none;\n  }\n\n[part="viewport"]::after {\n    content: none;\n    content: var(--tcds-carousel-spacer, none);\n    flex: 1 0 100%;\n  }\n\n::slotted(tcds-slide) {\n  display: block;\n  display: var(--tcds-carousel-slide-display, block);\n  flex: 1 0 100%;\n  flex: 1 0 var(--tcds-carousel-slide-size, 100%);\n  scroll-snap-align: start;\n  scroll-snap-align: var(--tcds-carousel-slide-align, start);\n  scroll-snap-stop: always;\n}\n\n[part="navigation"] {\n  grid-area: navigation;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  justify-content: var(--tcds-carousel-navigation-justify, center);\n  gap: 1.5rem;\n}\n\n[role="tablist"] {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 2rem;\n}\n\n[role="tab"] {\n  display: inline-flex;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  cursor: pointer;\n  height: .85rem;\n  width: .85rem;\n  min-width: .85rem;\n  border-radius: .85rem;\n  background: #a8a8a8;\n  transition: background-color var(--tcds-animation-productive-duration) var(--tcds-animation-productive-easing);\n}\n\n[role="tab"]:hover,\n  [role="tab"][aria-selected="true"] {\n    background-color: var(--tcds-color-primary);\n  }\n\n[part="play-pause"] {\n  grid-area: play-pause;\n  margin: 0 auto;\n  opacity: 0;\n  opacity: var(--tcds-carousel-play-pause-opacity, 0);\n  transition: opacity var(--tcds-animation-productive-duration) var(--tcds-animation-productive-easing);\n}\n\n[part="next"]:not(:hover), [part="previous"]:not(:hover) {\n    color: #a8a8a8;\n  }\n\n[part="next"] {\n  order: 3;\n}');var l=r;class c extends((0,s.Z)(HTMLElement)){static observedAttributes=["playing","timing","multiple"];get playing(){return this.hasAttribute("playing")&&this.hasAttribute("timing")}set playing(t){t=Boolean(t),(this.hasAttribute("timing")||!1===t)&&this.toggleAttribute("playing",t)}get timing(){return Number(this.getAttribute("timing"))}set timing(t){this.setAttribute("timing",parseInt(t).toString())}get multiple(){return this.hasAttribute("multiple")}set multiple(t){this.toggleAttribute("multiple",Boolean(t))}get slides(){return Array.from(this.querySelectorAll("tcds-slide"))}get nextIndex(){return(this.slides.indexOf(this.querySelector("[active]"))+1)%this.slides.length}get previousIndex(){return(this.slides.indexOf(this.querySelector("[active]"))-1+this.slides.length)%this.slides.length}#t={};get template(){const t=(this.playing?"Stop":"Start")+" automatic slide show";return(0,o.Z)()+`\n      <section aria-roledescription="carousel">\n        ${this.timing?`\n          <button\n            part="play-pause"\n            title="${t}"\n            aria-label="${t}"\n            onclick="this.getRootNode().host.toggle()"\n          >\n            <tcds-icon icon="${this.playing?"pause":"play"}"></tcds-icon>\n          </button>\n        `:""}\n        <div part="navigation">\n          <button\n            part="previous"\n            aria-label="Go to previous slide"\n            title="Go to previous slide"\n            onclick="this.getRootNode().host.previousClick()"\n          >\n            <tcds-icon icon="caret-left"></tcds-icon>\n          </button>\n          <button\n            part="next"\n            aria-label="Go to next slide"\n            title="Go to next slide"\n            onclick="this.getRootNode().host.nextClick()"\n          >\n            <tcds-icon icon="caret-right"></tcds-icon>\n          </button>\n          <div role="tablist" aria-label="Pick slide">\n            ${this.slides.map(((t,e)=>`\n              <button\n                role="tab"\n                aria-selected="${t.active}"\n                aria-label="Slide ${e+1} of ${this.slides.length}"\n                title="Slide ${e+1} of ${this.slides.length}"\n                tabindex="${t.active?"0":"-1"}"\n                onclick="this.getRootNode().host.indicatorClick(event)"\n                onkeydown="this.getRootNode().host.indicatorKeydown(event)"\n              ></button>\n            `)).join("")}\n          </div>\n        </div>\n        <div\n          part="viewport"\n          ${this.timing?`\n            aria-live="${this.playing?"off":"polite"}"\n            onmouseleave="this.getRootNode().host.resume()"\n            onfocus="this.getRootNode().host.pause()"\n            onblur="this.getRootNode().host.resume()"  \n          `:""}\n          onmouseover="this.getRootNode().host.viewportHover()"\n          ontouchstart="this.getRootNode().host.viewportSwipe()"\n        >\n          <slot></slot>\n        </div>\n      </section>\n    `}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.adoptedStyleSheets=[l]}#e;connectedCallback(){a.Z.apply(this,["playing","timing","multiple"]),this.requestUpdate(),this.#e=this.slides.find((t=>t.active))||this.slides[0]}attributeChangedCallback(t,e){this.requestUpdate({[t]:e})}mountedCallback(){this.viewport=this.shadowRoot.querySelector("[part=viewport]"),this.indicators=Array.from(this.shadowRoot.querySelectorAll("[role=tab]"));const t=matchMedia("(prefers-reduced-motion: reduce)").matches,e=matchMedia("(hover: none)").matches;this.playing=this.playing&&!t&&!e,this.slides.forEach((t=>this.swipe.observe(t))),this.scrollOutOfView.observe(this),document.addEventListener("visibilitychange",(()=>{document.hidden?this.pause():!1!==this.#t.isInView&&this.resume()})),requestAnimationFrame((()=>this.select(this.#e)))}updatedCallback(t){if("playing"in t)if(this.playing){const t=()=>{this.player=setTimeout((()=>{this.select(this.slides[this.nextIndex]),t()}),1e3*this.timing)};t(),this.#t.observingSwipe=!1}else clearTimeout(this.player)}#i;get swipe(){return new IntersectionObserver((t=>{if(!0===this.#t.observingSwipe)if(this.multiple){const{left:t,right:e}=this.viewport.getBoundingClientRect(),i=Math.floor((t+e)/2);clearTimeout(this.#i),this.#i=setTimeout((()=>{const t=this.slides.reduce(((t,e)=>{const{left:n,right:s}=e.getBoundingClientRect(),o=Math.floor((n+s)/2),a=Math.abs(o-i);return a<t.distance?{slide:e,distance:a}:t}),{slide:null,distance:1/0});t.slide&&this.select(t.slide,{scroll:!1})}),500)}else t.forEach((t=>{t.isIntersecting&&this.select(t.target)}))}),{root:this.viewport,threshold:this.multiple?Array.from({length:11},((t,e)=>e/10)):1,rootMargin:"1px"})}get scrollOutOfView(){return new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting?(this.resume(),this.#t.isInView=!0):(this.pause(),this.#t.isInView=!1)}))}),{threshold:.9})}nextClick(){this.select(this.slides[this.nextIndex]),this.stop(),this.#t.observingSwipe=!1}previousClick(){this.select(this.slides[this.previousIndex]),this.stop(),this.#t.observingSwipe=!1}indicatorClick(){let{target:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;this.select(this.slides[this.indicators.indexOf(t)]),this.stop(),this.#t.observingSwipe=!1}indicatorKeydown(){let{key:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;if(["ArrowRight","ArrowLeft"].includes(t)){const e="ArrowRight"===t?this.nextIndex:this.previousIndex;this.indicators[e].focus(),this.select(this.slides[e])}this.stop(),this.#t.observingSwipe=!1}viewportSwipe(){this.stop(),this.#t.observingSwipe=!0}viewportHover(){this.pause(),this.#t.observingSwipe=!0}play(){this.playing=!0,this.#t.isPaused=null}stop(){this.playing=!1,this.#t.isPaused=!1}toggle(){this.playing?this.stop():this.play()}pause(){this.playing&&(this.stop(),this.#t.isPaused=!0)}resume(){this.#t.isPaused&&requestAnimationFrame((()=>{this.play(),this.#t.isPaused=null}))}select(t){let{scroll:e=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.slides.forEach((e=>e.active=e===t)),e&&requestAnimationFrame((()=>{const{offsetLeft:e,offsetWidth:i}=t,{offsetLeft:n,offsetWidth:s}=this.viewport,o=e+i/2,a=n+s/2;this.viewport.scrollLeft=this.multiple?o-a:e-n}))}}customElements.define("tcds-carousel",c)}},t=>{t.O(0,[647],(()=>(578,t(t.s=578)))),t.O()}]);