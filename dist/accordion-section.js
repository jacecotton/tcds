"use strict";(self.webpackChunk_txch_tcds=self.webpackChunk_txch_tcds||[]).push([[968],{142:(t,n,e)=>{var o=e(337),i=e(138),s=e(35),a={x:50},c=e(225);const r=new CSSStyleSheet;r.replaceSync('[part="heading"] {\n  margin: 0;\n}\n\n@media (max-width: 768px) {\n\n[part="heading"] {\n    background: var(--tcds-color-background, var(--tcds-color-white));\n    position: sticky;\n    position: var(--tcds-accordion-section-heading-position, sticky);\n    top: 0;\n    z-index: 2;\n}\n  }\n\n[part="button"] {\n  background: none;\n  border: none;\n  border-bottom: 1px solid var(--tcds-color-gray-2);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--tcds-micro-s) 0;\n  text-align: left;\n  font-size: var(--tcds-accordion-heading-font-size, var(--tcds-font-size-ml));\n  font-family: var(--tcds-font-ui);\n  font-weight: var(--tcds-accordion-heading-font-weight, var(--tcds-font-weight-semibold));\n  width: 100%;\n  color: var(--tcds-color-text);\n}\n\n[part="icon"] {\n  pointer-events: none;\n}\n\n[part="panel"] {\n  overflow: hidden;\n}\n\n[part="content"] {\n  padding: 1rem 0;\n}');var l=r;class d extends((0,o.Z)(HTMLElement)){static observedAttributes=["open","label"];get open(){return this.hasAttribute("open")}set open(t){this.toggleAttribute("open",Boolean(t))}get label(){return this.getAttribute("label")}set label(t){this.setAttribute("label",t)}get accordion(){return this.closest("tcds-accordion")||this.getRootNode().host}get template(){const t=`h${this.getAttribute("heading-level")||this.accordion.headingLevel}`;return(0,i.Z)()+`\n      <section>\n        <${t} part="heading">\n          <button\n            part="button"\n            id="button"\n            aria-controls="panel"\n            aria-expanded="${this.open}"\n            onclick="this.getRootNode().host.clickHandler()"\n          >\n            ${this.label}\n            <tcds-icon part="icon" icon="${this.open?"minus":"plus"}"></tcds-icon>\n          </button>\n        </${t}>\n\n        <div part="panel" id="panel" aria-labelledby="button">\n          <div part="content">\n            <slot></slot>\n          </div>\n        </div>\n      </section>\n    `}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.adoptedStyleSheets=[l]}connectedCallback(){s.Z.apply(this,["open","label"]),this.requestUpdate()}attributeChangedCallback(t,n){this.requestUpdate({[t]:"open"===t?null!==n:n})}mountedCallback(){this.panel=this.shadowRoot.querySelector("[part~=panel]")}updatedCallback(t){if("open"in t){const n={height:["0",`${this.panel.scrollHeight}px`]},e=matchMedia("(prefers-reduced-motion: reduce)").matches;this.open?(this.panel.style.height="0",this.panel.hidden=!1,requestAnimationFrame((()=>{this.panel.animate(n,{duration:e?1:a.x}).onfinish=()=>this.panel.style.height="auto"})),this.accordion.multiple||this.accordion.closeAll((t=>t!==this))):t.open&&(this.panel.animate(n,{direction:"reverse",duration:e?1:a.x}).onfinish=()=>this.panel.hidden=!0)}else this.open||(this.panel.hidden=!0)}clickHandler(){this.toggle(),this.open&&window.innerWidth<c.AV.s&&"tcds-accordion-section"!==this.accordion.parentElement.localName&&setTimeout(this.scrollIntoView,2*a.x)}show(){this.open=!0}close(){this.open=!1}toggle(){this.open=!this.open}}customElements.define("tcds-accordion-section",d)},225:t=>{t.exports=JSON.parse('{"AV":{"s":896,"m":1280}}')}},t=>{t.O(0,[647],(()=>(142,t(t.s=142)))),t.O()}]);