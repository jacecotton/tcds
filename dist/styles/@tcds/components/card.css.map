{"version":3,"sources":["@tcds/components/card.scss","@tcds/components/<no source>","@tcds/typography/_mixins.scss"],"names":[],"mappings":"AAEA,MACE,yBAAA,CACA,gBAAA,CAAA,YAAA,CACA,iBAAA,CAMA,6BACE,oBAAA,CAAA,yBAAA,CACA,uBAAA,CAAA,4BAAA,CACA,kCACE,CAoBF,8BADF,2BAXE,iDAAA,CAAA,sDAAA,CACA,iBAAA,CAAA,sBAAA,CACA,gCACE,CACF,yBAAA,CAAA,CAiBF,kBArBE,iDAAA,CAAA,sDAAA,CACA,iBAAA,CAAA,sBAAA,CACA,gCACE,CACF,yBAAA,CAqBF,eACE,2CAAA,CACA,yBAAA,CACA,2DAAA,CACA,kCAAA,CAEA,gCAAA,CACA,4BAAA,CACA,mBAAA,CACA,qBAAA,CACA,sBAAA,CAGF,aACE,mCAAA,CAIA,8BADF,oCAEI,wBAAA,CAAA,CAIJ,4BACE,wBAAA,CAGF,sBACE,sCAAA,CAGF,qBACE,yBAAA,CAGF,aCnFF,eAAA,kBDoFI,ACpFJ,eDoFI,CACA,iCAAA,CAFF,0CCnFF,eAAA,iBDqFI,CAFF,iCCnFF,eAAA,iBDqFI,CAEA,iBACE,aAAA,CACA,UAAA,CACA,WAAA,CACA,0CAAA,CAAA,uCAAA,CACA,yBAAA,CAAA,sBAAA,CACA,eAAA,CAIJ,YCjGF,eAAA,kBDkGI,AClGJ,cDkGI,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,qDAAA,CACA,aAAA,CACA,yCAAA,CACA,iGACE,CATJ,yCCjGF,eAAA,iBD0GM,CATJ,gCCjGF,eAAA,iBD0GM,CAIJ,aEjGA,iBAAA,CAGE,+EAAA,CAMA,gBAAA,CF0FA,eAAA,CACA,aAAA,CACA,oBAAA,CACA,mBAAA,CAEA,2BACE,UAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CAWJ,eEzHA,cAAA,CAGE,4EAAA,CAUA,eAAA,CF8GA,mBAAA,CAEA,iBACE,iBAAA,CACA,aAAA,CACA,YAAA,CAIJ,cACE,YAAA,CACA,eAAA,CACA,UAAA","file":"card.css","sourcesContent":["@use \"../_all\" as *;\n\n.Card {\n  --card-media-small: 220px;\n  display: grid;\n  position: relative;\n\n  /**\n   * Vertical orientation styles (applies by default, unless the \"horizontal\"\n   * modifier is explicitly set).\n   */\n  &:not(#{&}--horizontal) {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto;\n    grid-template-areas:\n      \"media\"\n      \"body\";\n  }\n\n  /**\n   * Horizontal orientation styles.\n   */\n  @mixin horizontal-card {\n    grid-template-columns: var(--card-media-width, 1fr) 3fr;\n    grid-template-rows: 1fr;\n    grid-template-areas:\n      \"media body\";\n    --card-body-divider: none;\n  }\n\n  /**\n   * Apply horizontal orientation styles when the \"vertical\" modifier is not\n   * explicitly set and the card's outer container is sufficiently wide.\n   */\n  &:not(#{&}--vertical) {\n    @container (min-width: 600px) {\n      @include horizontal-card;\n    }\n  }\n\n  /**\n   * Also apply horizontal orientation styles when the \"horizontal\" modifier is\n   * explicitly set.\n   */\n  &--horizontal {\n    @include horizontal-card;\n  }\n\n  &--compact {\n    --card-media-width: var(--card-media-small);\n    --card-body-padding: #{space(\"loose\")};\n    --card-title-font-size: #{font-size(\"medium\", $responsive: true)};\n    --card-content-font-size: #{font-size(\"small\", $responsive: true)};\n\n    --button-background: transparent;\n    --button-text-color: #{theme-color(\"secondary\")};\n    --button-padding: 0;\n    --button-height: auto;\n    --button-overlay: none;\n  }\n\n  &--no-bg {\n    --card-body-background: transparent;\n  }\n\n  &--no-bg:not(#{&}--horizontal) {\n    @container (max-width: 599px) {\n      --card-body-padding-x: 0;\n    }\n  }\n\n  &--no-bg#{&}--vertical {\n    --card-body-padding-x: 0;\n  }\n\n  &--accent-divider {\n    --card-body-divider: #{space(\"tight\")} solid #{theme-color(\"primary\")};\n  }\n\n  &--contain-media {\n    --card-media-fit: contain;\n  }\n\n  &__media {\n    grid-area: media;\n    min-width: var(--card-media-small);\n\n    > img {\n      display: block;\n      width: 100%;\n      height: 100%;\n      object-fit: var(--card-media-fit, cover);\n      object-position: center;\n      overflow: hidden;\n    }\n  }\n\n  &__body {\n    grid-area: body;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    background-color: var(--card-body-background, #{color(\"gray\", \"0\")});\n    color: color(\"gray\", \"400\");\n    border-top: var(--card-body-divider, none);\n    padding:\n      var(--card-body-padding, #{space(\"x-loose\")})\n      var(--card-body-padding-x, var(--card-body-padding, #{space(\"x-loose\")}));\n  }\n\n  &__title {\n    @include font-size(\"medium-plus\", $custom-property: \"--card-title-font-size\");\n    font-weight: font-weight(\"semibold\");\n    color: inherit;\n    text-decoration: none;\n    margin-bottom: space(\"tight\", \"em\");\n\n    &[href]::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n\n  /**\n   * 1. Make other links in the card content clickable by raising it in the\n   *    stacking context.\n   * 2. Because the whole card surface is clickable, links within the card\n   *    should have a larger click target.\n   */\n\n  &__content {\n    @include font-size(\"medium\", $custom-property: \"--card-content-font-size\");\n    margin-bottom: space(\"loose\", \"em\");\n    \n    a {\n      position: relative; // 1\n      margin: -.5em; // 2\n      padding: .5em; // 2\n    }\n  }\n\n  &__footer {\n    display: flex;\n    margin-top: auto;\n    width: 100%;\n  }\n}",null,"@use \"sass:string\";\n@use \"_variables\" as *;\n@use \"_functions\" as *;\n\n/**\n * A mixin for generating responsive font sizes and automatically providing the\n * appropriate line-height based on the font-size.\n *\n * 1. A static fallback for browsers that do not support `clamp`.\n * 2. Set a tight line-height for font sizes xx-large through medium-plus.\n * 3. Set a normal line-height for font sizes medium through x-small.\n */\n@mixin font-size($font-size, $responsive: true, $custom-property: false) {\n  font-size: font-size($font-size); // 1\n\n  @if $custom-property {\n    font-size: var(#{string.unquote($custom-property)}, #{font-size($font-size, $responsive: true)});\n  } @else {\n    font-size: font-size($font-size, $responsive: true);\n  }\n\n  @if index((\"xx-large\", \"x-large\", \"large\", \"medium-plus\"), $font-size) {\n    line-height: line-height(\"tight\"); // 2\n  }\n\n  @if index((\"medium\", \"small\", \"x-small\"), $font-size) {\n    line-height: line-height(\"normal\"); // 3\n  }\n} "]}