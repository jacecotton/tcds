{"version":3,"sources":["@tcds/color/utilities.scss","@tcds/color/_variables.scss"],"names":[],"mappings":"AAwDI,cAEE,wBCwCS,CDtCT,aAAA,CAIF,wBACE,aAAA,CATF,gBAEE,wBCwCS,CDtCT,aAAA,CAIF,0BACE,aAAA,CATF,gBAEE,wBCwCS,CDtCT,aAAA,CAIF,0BACE,aAAA,CATF,YAEE,wBCwCS,CDtCT,aAAA,CAIF,sBACE,aAAA,CATF,gBAEE,wBCwCS,CDtCT,aAAA,CAIF,0BACE,aAAA,CATF,gBAEE,wBCwCS,CDtCT,aAAA,CAIF,0BACE,aAAA,CATF,gBAEE,wBCwCS,CDtCT,aAAA,CAIF,0BACE,aAAA,CATF,kBAEE,wBCwCS,CDtCT,aAAA,CAIF,4BACE,aAAA,CATF,kBAEE,wBCwCS,CDtCT,aAAA,CAIF,4BACE,aAAA,CATF,cAEE,wBCwCS,CDtCT,aAAA,CAIF,wBACE,aAAA,CATF,kBAEE,wBCwCS,CDtCT,aAAA,CAIF,4BACE,aAAA,CATF,kBAEE,wBCwCS,CDtCT,aAAA,CAIF,4BACE,aAAA,CATF,eAEE,wBCwCS,CDtCT,aAAA,CAIF,yBACE,aAAA,CATF,iBAEE,wBCwCS,CDtCT,aAAA,CAIF,2BACE,aAAA,CATF,iBAEE,wBCwCS,CDtCT,aAAA,CAIF,2BACE,aAAA,CATF,aAEE,wBCwCS,CDtCT,aAAA,CAIF,uBACE,aAAA,CATF,iBAEE,wBCwCS,CDtCT,aAAA,CAIF,2BACE,aAAA,CATF,iBAEE,wBCwCS,CDtCT,aAAA,CAIF,2BACE,aAAA,CATF,WAEE,wBCwCS,CDtCT,aAAA,CAIF,qBACE,aAAA,CATF,aAEE,wBCwCS,CDtCT,aAAA,CAIF,uBACE,aAAA,CATF,aAEE,wBCwCS,CDtCT,aAAA,CAIF,uBACE,aAAA,CATF,SAEE,wBCwCS,CDtCT,aAAA,CAIF,mBACE,aAAA,CATF,aAEE,wBCwCS,CDtCT,aAAA,CAIF,uBACE,aAAA,CATF,aAEE,wBCwCS,CDtCT,aAAA,CAIF,uBACE,aAAA,CASN,UACE,qBAAA,CACA,aAAA,CAGF,YACE,UAAA","file":"utilities.css","sourcesContent":["@use \"sass:map\";\n@use \"../_all\" as *;\n\n/**\n * Utility classes for the color system.\n */\n\n/**\n * Define which color grades work as text and link colors for each grade when\n * used as a background color. For instance, a color of grade 0 used as a\n * background color works with the same color at grade 400 for its text, and\n * grade 300 for a link.\n */\n$grade-associations: (\n  \"0\": (\n    \"text\": \"400\",\n    \"link\": \"300\",\n  ),\n  \"100\": (\n    \"text\": \"400\",\n    \"link\": \"400\",\n  ),\n  \"200\": (\n    \"text\": \"500\",\n    \"link\": \"500\",\n  ),\n  \"300\": (\n    \"text\": \"0\",\n    \"link\": \"0\",\n  ),\n  \"400\": (\n    \"text\": \"0\",\n    \"link\": \"100\",\n  ),\n  \"500\": (\n    \"text\": \"100\",\n    \"link\": \"200\",\n  ),\n);\n\n/**\n * Generate utility classes for setting background, text, and link colors for\n * each theme color alias.\n */\n@each $theme-color, $grade-map in $theme-colors {\n  @each $grade, $value in $grade-map {\n    // Construct the class as `.bg-color-grade`, e.g. `.bg-primary-100`.\n    $selector: \".bg-#{$theme-color}-#{$grade}\";\n\n    // Unless the grade is 300 (the medium color), in which case, omit the grade\n    // suffix.\n    @if $grade == \"300\" {\n      $selector: \".bg-#{$theme-color}\";\n    }\n\n    // Select the generated class.\n    #{$selector} {\n      // Set the background color.\n      background-color: $value;\n      // Get the appropriate text color from the `$grade-map` above.\n      color: map.get($grade-map, map.get($grade-associations, $grade, \"text\"));\n    }\n\n    // Get the appropriate link color from the `$grade-map` above.\n    :where(#{$selector} a) {\n      color: theme-color(\"link\", map.get($grade-associations, $grade, \"link\"));\n    }\n  }\n}\n\n/**\n * Manually add basic, non-variablized color utilities.\n */\n\n.bg-white {\n  background-color: #fff;\n  color: color(\"gray\", \"400\");\n}\n\n.text-white {\n  color: #fff;\n}","@use \"sass:map\";\n\n/**\n * Color design tokens. Each token and its value is stored in a map. Note that\n * each map has a corresponding getter function (see _functions.scss) for easier\n * access. For example, rather than `map.get($colors, \"red\")`, you can simply\n * use `color(\"red\")`.\n */\n\n/**\n * Basic color dictionary. Grades indicate lightness (perceptual luminosity), on\n * a scale of 0 (lightest) to 500 (darkest), at increments of 100.\n *\n * See: color()\n */\n$colors: (\n  \"red\": (\n    \"0\": #fff6f6,\n    \"100\": #ffdada,\n    \"200\": #ff888b,\n    \"300\": #da2530,\n    \"400\": #93000f,\n    \"500\": #410003,\n  ),\n\n  \"blue\": (\n    \"0\": #f5f8ff,\n    \"100\": #d5e3ff,\n    \"200\": #71adff,\n    \"300\": #2d73bc,\n    \"400\": #004880,\n    \"500\": #001c37,\n  ),\n\n  \"green\": (\n    \"0\": #e3ffe8,\n    \"100\": #aff2bd,\n    \"200\": #4cc16e,\n    \"300\": #248142,\n    \"400\": #005322,\n    \"500\": #002109,\n  ),\n\n  \"yellow\": (\n    \"0\": #fff9d4,\n    \"100\": #fbe090,\n    \"200\": #c9a900,\n    \"300\": #886f24,\n    \"400\": #504400,\n    \"500\": #211b00,\n  ),\n\n  \"gray\": (\n    \"0\": #f8f8f9,\n    \"100\": #e2e2e7,\n    \"200\": #aaaab3,\n    \"300\": #707079,\n    \"400\": #464652,\n    \"500\": #1b1b1e,\n  ),\n\n  \"shade\": (\n    \"0\": hsl(0 0% 0% / 3%),\n    \"100\": hsl(0 0% 0% / 10%),\n    \"200\": hsl(0 0% 0% / 30%),\n    \"300\": hsl(0 0% 0% / 53.4%),\n    \"400\": hsl(0 0% 0% / 70%),\n    \"500\": hsl(0 0% 0% / 90%),\n  ),\n);\n\n/**\n * Interface aliases are keywords used to reference colors according to the role\n * they serve in a user interface.\n *\n * See: interface-color()\n */\n$interface-colors: (\n  \"positive\": map.get($colors, \"green\"),\n  \"negative\": map.get($colors, \"red\"),\n  \"attention\": map.get($colors, \"yellow\"),\n  \"notice\": map.get($colors, \"blue\"),\n  \"neutral\": map.get($colors, \"gray\"),\n);\n\n/**\n * Theme aliases are keywords used to reference colors according to the role\n * they serve in the theme and brand scheme. Default colors are set here, but\n * they are expected to be overridden on a site-by-site basis according to that\n * site's branding.\n *\n * See: theme-color()\n */\n$theme-color-primary: \"red\" !default;\n$theme-color-secondary: \"blue\" !default;\n$theme-color-tertiary: \"gray\" !default;\n$theme-color-link: \"blue\" !default;\n\n$theme-colors: (\n  \"primary\": map.get($colors, $theme-color-primary),\n  \"secondary\": map.get($colors, $theme-color-secondary),\n  \"tertiary\": map.get($colors, $theme-color-tertiary),\n  \"link\": map.get($colors, $theme-color-link),\n);"]}